const std = @import("std");

const langs = std.ComptimeStringMap([]const u8, .{
    .{ "auto", "Automatic" },

    .{ "af", "Afrikaans" },
    .{ "sq", "Albanian" },
    .{ "am", "Amharic" },
    .{ "ar", "Arabic" },
    .{ "hy", "Armenian" },
    .{ "az", "Azerbaijani" },
    .{ "eu", "Basque" },
    .{ "be", "Belarusian" },
    .{ "bn", "Bengali" },
    .{ "bs", "Bosnian" },
    .{ "bg", "Bulgarian" },
    .{ "ca", "Catalan" },
    .{ "ceb", "Cebuano" },
    .{ "zh-CN", "Chinese Simplified" },
    .{ "zh-TW", "Chinese Traditional" },
    .{ "co", "Corsican" },
    .{ "hr", "Croatian" },
    .{ "cs", "Czech" },
    .{ "da", "Danish" },
    .{ "nl", "Dutch" },
    .{ "en", "English" },
    .{ "eo", "Esperanto" },
    .{ "et", "Estonian" },
    .{ "fi", "Finnish" },
    .{ "fr", "French" },
    .{ "fy", "Frisian" },
    .{ "gl", "Galician" },
    .{ "ka", "Georgian" },
    .{ "de", "German" },
    .{ "el", "Greek" },
    .{ "gu", "Gujarati" },
    .{ "ht", "Haitian Crole" },
    .{ "ha", "Hausan" },
    .{ "haw", "Hawaiian" },
    .{ "iw", "Hebrew" },
    .{ "hi", "Hindi" },
    .{ "hmn", "Hmong" },
    .{ "hu", "Hungarian" },
    .{ "is", "Icelandic" },
    .{ "ig", "Igbo" },
    .{ "id", "Indonesian" },
    .{ "ga", "Irish" },
    .{ "it", "Italian" },
    .{ "ja", "Japanese" },
    .{ "jw", "Javanese" },
    .{ "kn", "Kannada" },
    .{ "kk", "Kazakh" },
    .{ "km", "Khmer" },
    .{ "rw", "Kinyarwanda" },
    .{ "ko", "Korean" },
    .{ "ku", "Kurdish" },
    .{ "ky", "Kyrgyz" },
    .{ "lo", "Lao" },
    .{ "la", "Latin" },
    .{ "lv", "Latvian" },
    .{ "lt", "Lithunian" },
    .{ "lb", "Luxembourgish" },
    .{ "mk", "Macedonian" },
    .{ "mg", "Malagasy" },
    .{ "ms", "Malay" },
    .{ "ml", "Malayam" },
    .{ "mt", "Maltese" },
    .{ "mi", "Maori" },
    .{ "mr", "Marathi" },
    .{ "mn", "Mongolian" },
    .{ "my", "Myanmar" },
    .{ "ne", "Nepali" },
    .{ "no", "Norwegian" },
    .{ "ny", "Nyanja" },
    .{ "or", "Odia" },
    .{ "ps", "Pashto" },
    .{ "fa", "Persian" },
    .{ "pl", "Polish" },
    .{ "pt", "Portuguese" },
    .{ "pa", "Punjabi" },
    .{ "ro", "Romanian" },
    .{ "ru", "Russian" },
    .{ "sm", "Samoan" },
    .{ "gd", "Scots Gaelic" },
    .{ "sr", "Serbian" },
    .{ "st", "Sesotho" },
    .{ "sn", "Shona" },
    .{ "sd", "Sindhi" },
    .{ "si", "Sinhala" },
    .{ "sk", "Slovak" },
    .{ "sl", "Slovenian" },
    .{ "so", "Somali" },
    .{ "es", "Spanish" },
    .{ "su", "Sundanese" },
    .{ "sw", "Swahili" },
    .{ "sv", "Swedish" },
    .{ "tl", "Tagalog" },
    .{ "tg", "Tajik" },
    .{ "ta", "Tamil" },
    .{ "tt", "Tatar" },
    .{ "te", "Telugu" },
    .{ "th", "Thai" },
    .{ "tr", "Turkish" },
    .{ "tk", "Turkmen" },
    .{ "uk", "Ukranian" },
    .{ "ur", "Urdu" },
    .{ "ug", "Uyghur" },
    .{ "uz", "Uzbek" },
    .{ "vi", "Vietnamese" },
    .{ "cy", "Welsh" },
    .{ "xh", "Xhosa" },
    .{ "yi", "Yiddish" },
    .{ "yo", "Yaruba" },
    .{ "zu", "Zulu" },
});

pub fn getByKey(key: []const u8) []const u8 {
    return langs.get(key) orelse "Unknown";
}

pub fn has(key: []const u8) bool {
    return langs.has(key);
}

pub fn getKeySlice(key: []const u8) ?[]const u8 {
    for (langs.kvs) |l| {
        if (std.ascii.eqlIgnoreCase(key, l.key))
            return l.key;
    }

    return null;
}
